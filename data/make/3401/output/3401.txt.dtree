advmod(implemented-12, furthermore-1)
det(regulator-7, the-3)
amod(regulator-7, direct-4)
amod(regulator-7, current-5)
nn(regulator-7, voltage-6)
nsubjpass(implemented-12, regulator-7)
dep(regulator-7, 24-8)
aux(implemented-12, can-9)
auxpass(implemented-12, be-10)
advmod(implemented-12, so-11)
root(ROOT-0, implemented-12)
mark(provide-16, that-13)
nsubj(provide-16, it-14)
aux(provide-16, can-15)
ccomp(implemented-12, provide-16)
amod(voltages-22, different-17)
advmod(different-17, respectively-19)
conj_but(different-17, respectively-19)
amod(voltages-22, respectively-19)
amod(voltages-22, constant-20)
nn(voltages-22, release-21)
dobj(provide-16, voltages-22)
amod(brakes-25, different-24)
prep_for(voltages-22, brakes-25)
amod(types-28, different-27)
prep_in(provide-16, types-28)
nn(turbines-31, wind-30)
prep_of(types-28, turbines-31)

advmod(applicable-13, thereby-1)
det(device-4, the-2)
amod(device-4, driving-3)
nsubj(applicable-13, device-4)
num(device-4, 1-5)
prepc_according_to(device-4, to-7)
det(invention-10, the-8)
amod(invention-10, present-9)
pobj(device-4, invention-10)
aux(applicable-13, can-11)
cop(applicable-13, be-12)
root(ROOT-0, applicable-13)
advmod(applicable-13, widely-14)
advmod(applicable-13, economically-16)
conj_and(applicable-13, economically-16)

