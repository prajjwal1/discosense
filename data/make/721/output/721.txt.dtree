mark(rejected-5, if-1)
det(challenge-3, the-2)
nsubjpass(rejected-5, challenge-3)
auxpass(rejected-5, is-4)
advcl(continue-10, rejected-5)
det(tribunal-8, the-7)
nsubj(continue-10, tribunal-8)
nsubj(make-16, tribunal-8)
aux(continue-10, shall-9)
root(ROOT-0, continue-10)
det(proceedings-14, the-12)
amod(proceedings-14, arbitral-13)
prep_with(continue-10, proceedings-14)
conj_and(continue-10, make-16)
det(award-18, an-17)
dobj(make-16, award-18)

advmod(approach-2, hence-1)
nsubj(is-6, approach-2)
det(court-5, a-4)
prep_to(approach-2, court-5)
root(ROOT-0, is-6)
advmod(is-6, only-7)
det(stage-12, the-9)
nn(stage-12, post-10)
nn(stage-12, award-11)
prep_at(is-6, stage-12)

